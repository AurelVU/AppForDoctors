[
  {
    "Id": "203023",
    "ThreadId": "59975",
    "Html": "<p>Good examples as I am able to read all the columns and rows in my spreadsheet. Question, is there a method to loop through and read the sheets within the spreadsheet?</p>\r\n<p>&nbsp;</p>\r\n<p>thanks,</p>\r\n<p>jay</p>",
    "PostedDate": "2009-06-18T10:46:32.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207308",
    "ThreadId": "59975",
    "Html": "<p>Hi Jay,</p>\r\n<p>I falied to read values from my Excel file, could you share with me, how did you manage to read values from your Excel file?</p>\r\n<p>Here is my code:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">string</span> content = <span style=\"color:Green\">// value returned from File Attachment control</span>\r\nbytes[] contentBytes = Convert.FromBase64String(content);\r\n<span style=\"color:Green\">// This contentBytes not only contains the data in Excel file,</span>\r\n<span style=\"color:Green\">// also the file name, file size, etc.</span>\r\nbytes[] dataBytes = <span style=\"color:Green\">// get the bytes[] of only the data in Excel file</span>\r\nMemoryStream stream = <span style=\"color:Blue\">new</span> MemoryStream(dataBytes);\r\n\r\n<span style=\"color:Green\">// The attached Excel is .xls file</span>\r\nIExcelDataReader reader = Factory.CreateReader(stream, ExcelFileType.Binary);\r\nDataSet ds = reader.AsDataSet();\r\n\r\n<span style=\"color:Blue\">while</span>(reader.Read())\r\n{\r\n    <span style=\"color:Green\">// <span style=\"color:#ff0000\">**</span> reader.GetString(index) returns empty value;</span>\r\n}\r\n\r\nDataTable dt = ds.Tables[0];\r\nDataRowCollection rows = dt.Rows;\r\n<span style=\"color:Blue\">for</span>(<span style=\"color:Blue\">int</span> i = 0; i &lt; rows.Count; i++)\r\n{\r\n    <span style=\"color:Blue\">foreach</span>(DataColumn column <span style=\"color:Blue\">in</span> dt.Columns)\r\n    {\r\n        <span style=\"color:Green\">// <span style=\"color:#ff0000\">**</span> rows[i][column.Ordinal] returns empty value;</span>\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>Thanks.</p>",
    "PostedDate": "2009-06-30T16:30:03.76-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207538",
    "ThreadId": "59975",
    "Html": "\r\n<div>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">This worked for me:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">/* ------------------------------------------------------------------------------------------------------------------------------------</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">namespace: ExcelStreamReader</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">classname: ExcelStreamReaderClass</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">calling convention:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">    Delimiter selected:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">      ExcelStreamReaderClass ExcelReader = new ExcelStreamReaderClass(&quot;c:\\\\temp\\\\aec_100006.xls&quot;,\r\n ExcelStreamReaderClass.Delimiter.Pipe);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">    Delimiter default ('|'):</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">      ExcelStreamReaderClass ExcelReader = new ExcelStreamReaderClass(&quot;c:\\\\temp\\\\aec_100006.xls&quot;);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">parameters:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">  TabNum          - spreadsheet tab to convert</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">  TabNameList     - List of the names of all tabs in the workbook.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">  TabCatalogList  - List of the catalog of all tabs in the workbook.</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\">--------------------------------------------------------------------------------------------------------------------------------------*/</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:green\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.Collections.Generic;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.Linq;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.Text;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.IO;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.Data.OleDb;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n System.Data;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">namespace</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n ExcelStreamReader</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">class</span> <span style=\"color:#2B91AF\">ExcelStreamReaderClass</span> :\r\n<span style=\"color:#2B91AF\">StreamReader</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">  {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n Public Items</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">enum</span> <span style=\"color:#2B91AF\">Delimiter</span> { Pipe, Comma, Tab, All }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">int</span> TabNum { <span style=\"color:blue\">get</span>;\r\n<span style=\"color:blue\">set</span>; }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; TabNameList {\r\n<span style=\"color:blue\">get</span> { \r\n<span style=\"color:blue\">return</span> _TableNameList; } }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; TabCatalogList {\r\n<span style=\"color:blue\">get</span> { \r\n<span style=\"color:blue\">return</span> _TableCatalogList; } }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n Private Data</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">OleDbConnection</span> _conn;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">DataTable</span> _SchemaTable = \r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">DataTable</span>();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:#2B91AF\">OleDbDataReader</span>&gt; _DataReaderList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:#2B91AF\">OleDbDataReader</span>&gt;();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; _TableNameList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt;();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; _TableCatalogList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">List</span>&lt;<span style=\"color:blue\">string</span>&gt;();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">char</span> _Delimiter = <span style=\"color:#A31515\">'|'</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:#2B91AF\">ProfileClass</span> _Profile;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> ExcelStreamReaderClass(<span style=\"color:blue\">string</span> FilePathName) :\r\n<span style=\"color:blue\">base</span>(FilePathName)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _Profile =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">ProfileClass</span>();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _Delimiter =\r\n<span style=\"color:#A31515\">'|'</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> ExcelStreamReaderClass(<span style=\"color:blue\">string</span> FilePathName,\r\n<span style=\"color:#2B91AF\">Delimiter</span> del) : \r\n<span style=\"color:blue\">base</span>(FilePathName)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _Profile =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">ProfileClass</span>();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">switch</span> (del)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:#2B91AF\">Delimiter</span>.Pipe:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:#A31515\">'|'</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:#2B91AF\">Delimiter</span>.Comma:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:#A31515\">','</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:#2B91AF\">Delimiter</span>.Tab:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:#A31515\">'\\t'</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:#2B91AF\">Delimiter</span>.All:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">default</span>:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      OpenWorkbook(FilePathName);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      OpenExcelDataReader();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n Excel setup routines</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> BuildConnectionString(<span style=\"color:blue\">string</span> FileName)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">string</span> ConStr = \r\n<span style=\"color:#A31515\">&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot;</span> + FileName +\r\n<span style=\"color:#A31515\">&quot;;Extended Properties=\\&quot;Excel 12.0 Xml;HDR=NO;IMEX=1\\&quot;&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">return</span> (ConStr);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">void</span> OpenWorkbook(<span style=\"color:blue\">string</span> fn)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _conn =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">OleDbConnection</span>(BuildConnectionString(fn));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _conn.Open();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">throw</span> ex;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">void</span> OpenExcelDataReader()</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _Profile.Start(<span style=\"color:#A31515\">&quot;Loading Schema&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _SchemaTable = _conn.GetOleDbSchemaTable(System.Data.OleDb.<span style=\"color:#2B91AF\">OleDbSchemaGuid</span>.Tables,\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:blue\">object</span>[] { <span style=\"color:blue\">null</span>,\r\n<span style=\"color:blue\">null</span>, \r\n<span style=\"color:blue\">null</span>, <span style=\"color:#A31515\">&quot;TABLE&quot;</span> });</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _Profile.Stop();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">foreach</span> (<span style=\"color:#2B91AF\">DataRow</span> Row\r\n<span style=\"color:blue\">in</span> _SchemaTable.Rows)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _Profile.Start(<span style=\"color:#A31515\">&quot;Loading table&quot;</span> + Row[<span style=\"color:#A31515\">&quot;TABLE_NAME&quot;</span>].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:#2B91AF\">OleDbCommand</span> cmd =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">OleDbCommand</span>(<span style=\"color:#A31515\">&quot;select * from [&quot;</span> + Row[<span style=\"color:#A31515\">&quot;TABLE_NAME&quot;</span>].ToString() +\r\n<span style=\"color:#A31515\">&quot;]&quot;</span>, _conn);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _TableNameList.Add(Row[<span style=\"color:#A31515\">&quot;TABLE_NAME&quot;</span>].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _TableCatalogList.Add(Row[<span style=\"color:#A31515\">&quot;TABLE_GUID&quot;</span>].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _DataReaderList.Add(cmd.ExecuteReader());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _Profile.Stop();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10.0pt;font-family:'Courier New'\">\r\n Public access routines</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">string</span> s;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:#2B91AF\">IEnumerable</span>&lt;<span style=\"color:blue\">string</span>&gt; GetEnumerator</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">get</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _Profile.Start(<span style=\"color:#A31515\">&quot;Reading\r\n lines&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">while</span> (_DataReaderList[TabNum].Read())</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">         \r\n<span style=\"color:#2B91AF\">StringBuilder</span> sbLine =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">StringBuilder</span>();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">         \r\n<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; _DataReaderList[TabNum].FieldCount - 1; i++)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">            sbLine.Append(_DataReaderList[TabNum][i].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">            sbLine.Append(_Delimiter);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          sbLine.Append(_DataReaderList[TabNum][_DataReaderList[TabNum].FieldCount - 1].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">         \r\n<span style=\"color:blue\">yield</span> \r\n<span style=\"color:blue\">return</span> (sbLine.ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        _Profile.Stop();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">override</span> <span style=\"color:blue\">string</span> ReadLine()</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:#2B91AF\">StringBuilder</span> sbLine =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:#2B91AF\">StringBuilder</span>();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">var</span> x = _DataReaderList[TabNum].Read();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; _DataReaderList[TabNum].FieldCount - 1; i++)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          sbLine.Append(_DataReaderList[TabNum][i].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">          sbLine.Append(_Delimiter);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">        sbLine.Append(_DataReaderList[TabNum][_DataReaderList[TabNum].FieldCount - 1].ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">return</span> (<span style=\"color:blue\">null</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">return</span> (sbLine.ToString());</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">void</span> DisplayProfile()</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">string</span> line\r\n<span style=\"color:blue\">in</span> _Profile.GetProfileEnumerator)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">       \r\n<span style=\"color:#2B91AF\">Console</span>.WriteLine(line);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> Close()</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">      _conn.Close();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">base</span>.Close();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">  }</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:10.0pt;font-family:'Courier New'\">}</span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\"> </span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\"> </span></p>\r\n<div>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\">Steve Holle</span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\">Data Services Programmer</span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\"> </span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\">Tel: (406)255-9500</span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\">Fax: (406)255-9595</span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\"><a href=\"mailto:steveh@cu.net\">mailto:steveh@cu.net</a></span><span style=\"color:navy\"></span></p>\r\n<p><span style=\"font-size:10.0pt;font-family:Arial;color:navy\">SDG</span><span style=\"font-size:10.0pt;font-family:Arial\"></span></p>\r\n</div>\r\n<div>\r\n<div align=center style=\"text-align:center\"><span style=\"font-size:12.0pt\">\r\n<hr size=2 width=\"100%\" align=center>\r\n</span></div>\r\n<p><b><span style=\"font-size:10.0pt;font-family:Tahoma;font-weight:bold\">From:</span></b><span style=\"font-size:10.0pt;font-family:Tahoma\"> fennychai [mailto:notifications@codeplex.com]\r\n<br>\r\n<b><span style=\"font-weight:bold\">Sent:</span></b> Tuesday, June 30, 2009 5:30 PM<br>\r\n<b><span style=\"font-weight:bold\">To:</span></b> Steve Holle<br>\r\n<b><span style=\"font-weight:bold\">Subject:</span></b> Re: Read Excel Work Sheets [ExcelDataReader:59975]</span></p>\r\n</div>\r\n<p><span style=\"font-size:12.0pt\"> </span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana\">From: fennychai</span></p>\r\n<div style=\"margin-bottom:24.0pt\" id=ThreadNotificationPostBody>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana\">Hi Jay,</span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana\">I falied to read values from my Excel file, could you share with me, how did you manage to read values from your Excel file?</span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana\">Here is my code:</span></p>\r\n<div>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:blue\">string</span><span style=\"color:black\"> content = </span><span style=\"color:green\">// value returned from File Attachment control</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">bytes[] contentBytes = Convert.FromBase64String(content);</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:green\">// This contentBytes not only contains the data in Excel file,</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:green\">// also the file name, file size, etc.</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">bytes[] dataBytes = </span><span style=\"color:green\">// get the bytes[] of only the data in Excel file</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">MemoryStream stream = </span><span style=\"color:blue\">new</span><span style=\"color:black\"> MemoryStream(dataBytes);</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\"> </span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:green\">// The attached Excel is .xls file</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">IExcelDataReader reader = Factory.CreateReader(stream, ExcelFileType.Binary);</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">DataSet ds = reader.AsDataSet();</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\"> </span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:blue\">while</span><span style=\"color:black\">(reader.Read())</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">{</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">    </span><span style=\"color:green\">// </span><span style=\"color:red\">**</span><span style=\"color:green\"> reader.GetString(index) returns empty value;</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">}</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\"> </span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">DataTable dt = ds.Tables[0];</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">DataRowCollection rows = dt.Rows;</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:blue\">for</span><span style=\"color:black\">(</span><span style=\"color:blue\">int</span><span style=\"color:black\"> i = 0; i &lt; rows.Count; i++)</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">{</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">    </span><span style=\"color:blue\">foreach</span><span style=\"color:black\">(DataColumn column </span><span style=\"color:blue\">in</span><span style=\"color:black\"> dt.Columns)</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">    {</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">        </span><span style=\"color:green\">// </span><span style=\"color:red\">**</span><span style=\"color:green\"> rows[i][column.GetOrdinal()] returns empty value;</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">    }</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:10.0pt;color:black\">}</span></pre>\r\n</div>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana\">Thanks.</span></p>\r\n</div>\r\n<div style=\"border:none;border-top:solid #CCCCCC 1.0pt;padding:0in 0in 0in 0in\" id=ThreadNotificationFooter>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana;color:gray\">Read the\r\n<a href=\"http://exceldatareader.codeplex.com/Thread/View.aspx?ThreadId=59975&ANCHOR#Post207308\">\r\nfull discussion online</a>.</span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana;color:gray\">To add a post to this discussion, reply to this email (<a href=\"mailto:ExcelDataReader@discussions.codeplex.com?subject=[ExcelDataReader:59975]\">ExcelDataReader@discussions.codeplex.com</a>)</span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana;color:gray\">To start a new discussion for this project, email\r\n<a href=\"mailto:ExcelDataReader@discussions.codeplex.com\">ExcelDataReader@discussions.codeplex.com</a></span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana;color:gray\">You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"http://www.codeplex.com/site/discussions/project/unsubscribe/ExcelDataReader\">\r\nunsubscribe or change your settings</a> on codePlex.com.</span></p>\r\n<p><span style=\"font-size:9.0pt;font-family:Verdana;color:gray\">Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at codeplex.com</span></p>\r\n</div>\r\n</div>\r\n<br>\r\n<hr>\r\nDISCLAIMER:<br>\r\nThis message is confidential, intended only for the named recipient(s) and may contain information that is privileged or exempt from disclosure under applicable law. If you are not the intended recipient(s), you are notified that the dissemination, distribution\r\n or copying of this message is strictly prohibited. If you receive this message in error, or are not the named recipient(s), please notify the sender at either the e-mail address or by calling the telephone number associated with this transmission. Please delete\r\n this e-mail from your computer (or discard this fax). Thank You.<br>\r\n\r\n",
    "PostedDate": "2009-07-01T06:51:18.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207555",
    "ThreadId": "59975",
    "Html": "\r\nThis is an example of what I used,<br><br><br><br>using System;<br>using System.Collections.Generic;<br>using System.Configuration;<br>using System.Data;<br>using System.IO;<br>using System.Text;<br>using Excel;<br>namespace ReadExcel<br>{<br>    class Program<br>    {<br>        private static void ImportFromExcelFile(string filePath)<br>        {<br>            DataRow[] foundRows;<br>            StreamWriter sw;<br>            FileStream stream = File.Open(filePath, FileMode.Open, FileAccess.Read);<br><br>            // Reading from a binary Excel file ('97-2003 format; *.xls)<br>            IExcelDataReader excelReader = Factory.CreateReader(stream, ExcelFileType.Binary);<br><br>            // Reading from a OpenXml Excel file (2007 format; *.xlsx)<br>            //IExcelDataReader excelReader = Factory.CreateReader(stream, ExcelFileType.OpenXml);<br><br>            // The result of each spreadsheet will be created in the result.Tables<br>            //DataSet result = excelReader.AsDataSet();<br><br>            // Reader methods<br>            DataTable table = new DataTable();<br><br>            while (excelReader.Read())<br>            {<br>                table.Columns.Add(new DataColumn());<br>                // loop through the columns of the spreadsheet to collect the row values<br>                for (int n = 0; n &lt; excelReader.FieldCount; n++)<br>                {<br>                    table.Rows.Add(excelReader.GetValue(n));<br>                }<br>            }<br><br>            // go through the table columns<br>            for (int k = 0; k &lt; excelReader.FieldCount; k++)<br>            {<br>                // Sort by rows from left to right columns<br>                foundRows = table.Select(null, table.TableName);<br><br>                // go through the table rows<br>                for (int i = 0; i &lt;= foundRows.GetUpperBound(0); i++)<br>                {<br>                    // do something<br>                }<br>            }<br><br>            // Free resources<br>            excelReader.Close();<br>        }<br>    }<br>}<br><br><br><br>Jay<br><br>\r\n<br><br><br><br><hr id=stopSpelling>From: [email removed]<br>To: [email removed]<br>Date: Wed, 1 Jul 2009 06:51:28 -0700<br>Subject: Re: Read Excel Work Sheets [ExcelDataReader:59975]<br><br>\r\n\r\n From: sholle<br> <div id=\"EC_ThreadNotificationPostBody\">\r\n<div>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">This worked for me:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">/* ------------------------------------------------------------------------------------------------------------------------------------</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">namespace: ExcelStreamReader</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">classname: ExcelStreamReaderClass</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">calling convention:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">    Delimiter selected:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">      ExcelStreamReaderClass ExcelReader = new ExcelStreamReaderClass(&quot;c:\\\\temp\\\\aec_100006.xls&quot;,\r\n ExcelStreamReaderClass.Delimiter.Pipe);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">    Delimiter default ('|'):</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">      ExcelStreamReaderClass ExcelReader = new ExcelStreamReaderClass(&quot;c:\\\\temp\\\\aec_100006.xls&quot;);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">parameters:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">  TabNum          - spreadsheet tab to convert</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">  TabNameList     - List of the names of all tabs in the workbook.</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">  TabCatalogList  - List of the catalog of all tabs in the workbook.</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\">--------------------------------------------------------------------------------------------------------------------------------------*/</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:green\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.Collections.Generic;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.Linq;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.Text;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.IO;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.Data.OleDb;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">using</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n System.Data;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">namespace</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n ExcelStreamReader</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">{</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">class</span> <span style=\"color:rgb(43, 145, 175)\">ExcelStreamReaderClass</span> :\r\n<span style=\"color:rgb(43, 145, 175)\">StreamReader</span></span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">  {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n Public Items</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">enum</span> <span style=\"color:rgb(43, 145, 175)\">Delimiter</span> { Pipe, Comma, Tab, All }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">int</span> TabNum { <span style=\"color:blue\">get</span>;\r\n<span style=\"color:blue\">set</span>; }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; TabNameList {\r\n<span style=\"color:blue\">get</span> { \r\n<span style=\"color:blue\">return</span> _TableNameList; } }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; TabCatalogList {\r\n<span style=\"color:blue\">get</span> { \r\n<span style=\"color:blue\">return</span> _TableCatalogList; } }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n Private Data</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">OleDbConnection</span> _conn;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">DataTable</span> _SchemaTable = \r\n<span style=\"color:blue\">new</span> <span style=\"color:rgb(43, 145, 175)\">DataTable</span>();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:rgb(43, 145, 175)\">OleDbDataReader</span>&gt; _DataReaderList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:rgb(43, 145, 175)\">OleDbDataReader</span>&gt;();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; _TableNameList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt;();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt; _TableCatalogList =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">List</span>&lt;<span style=\"color:blue\">string</span>&gt;();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">char</span> _Delimiter = <span style=\"color:rgb(163, 21, 21)\">'|'</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:rgb(43, 145, 175)\">ProfileClass</span> _Profile;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> ExcelStreamReaderClass(<span style=\"color:blue\">string</span> FilePathName) :\r\n<span style=\"color:blue\">base</span>(FilePathName)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _Profile =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">ProfileClass</span>();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _Delimiter =\r\n<span style=\"color:rgb(163, 21, 21)\">'|'</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> ExcelStreamReaderClass(<span style=\"color:blue\">string</span> FilePathName,\r\n<span style=\"color:rgb(43, 145, 175)\">Delimiter</span> del) : \r\n<span style=\"color:blue\">base</span>(FilePathName)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _Profile =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">ProfileClass</span>();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">switch</span> (del)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:rgb(43, 145, 175)\">Delimiter</span>.Pipe:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:rgb(163, 21, 21)\">'|'</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:rgb(43, 145, 175)\">Delimiter</span>.Comma:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:rgb(163, 21, 21)\">','</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:rgb(43, 145, 175)\">Delimiter</span>.Tab:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          _Delimiter =\r\n<span style=\"color:rgb(163, 21, 21)\">'\\t'</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">case</span> \r\n<span style=\"color:rgb(43, 145, 175)\">Delimiter</span>.All:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">default</span>:</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      OpenWorkbook(FilePathName);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      OpenExcelDataReader();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n Excel setup routines</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> BuildConnectionString(<span style=\"color:blue\">string</span> FileName)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">string</span> ConStr = \r\n<span style=\"color:rgb(163, 21, 21)\">&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot;</span> + FileName +\r\n<span style=\"color:rgb(163, 21, 21)\">&quot;;Extended Properties=\\&quot;Excel 12.0 Xml;HDR=NO;IMEX=1\\&quot;&quot;</span>;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">return</span> (ConStr);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">void</span> OpenWorkbook(<span style=\"color:blue\">string</span> fn)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">try</span></span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _conn =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">OleDbConnection</span>(BuildConnectionString(fn));</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _conn.Open();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">catch</span> (<span style=\"color:rgb(43, 145, 175)\">Exception</span> ex)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">throw</span> ex;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">void</span> OpenExcelDataReader()</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _Profile.Start(<span style=\"color:rgb(163, 21, 21)\">&quot;Loading Schema&quot;</span>);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _SchemaTable = _conn.GetOleDbSchemaTable(System.Data.OleDb.<span style=\"color:rgb(43, 145, 175)\">OleDbSchemaGuid</span>.Tables,\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:blue\">object</span>[] { <span style=\"color:blue\">null</span>,\r\n<span style=\"color:blue\">null</span>, \r\n<span style=\"color:blue\">null</span>, <span style=\"color:rgb(163, 21, 21)\">&quot;TABLE&quot;</span> });</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _Profile.Stop();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">foreach</span> (<span style=\"color:rgb(43, 145, 175)\">DataRow</span> Row\r\n<span style=\"color:blue\">in</span> _SchemaTable.Rows)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _Profile.Start(<span style=\"color:rgb(163, 21, 21)\">&quot;Loading table&quot;</span> + Row[<span style=\"color:rgb(163, 21, 21)\">&quot;TABLE_NAME&quot;</span>].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:rgb(43, 145, 175)\">OleDbCommand</span> cmd =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">OleDbCommand</span>(<span style=\"color:rgb(163, 21, 21)\">&quot;select * from [&quot;</span> + Row[<span style=\"color:rgb(163, 21, 21)\">&quot;TABLE_NAME&quot;</span>].ToString() +\r\n<span style=\"color:rgb(163, 21, 21)\">&quot;]&quot;</span>, _conn);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _TableNameList.Add(Row[<span style=\"color:rgb(163, 21, 21)\">&quot;TABLE_NAME&quot;</span>].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _TableCatalogList.Add(Row[<span style=\"color:rgb(163, 21, 21)\">&quot;TABLE_GUID&quot;</span>].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _DataReaderList.Add(cmd.ExecuteReader());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _Profile.Stop();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #region</span><span style=\"font-size:10pt;font-family:'Courier New'\">\r\n Public access routines</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">private</span> \r\n<span style=\"color:blue\">string</span> s;</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:rgb(43, 145, 175)\">IEnumerable</span>&lt;<span style=\"color:blue\">string</span>&gt; GetEnumerator</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">get</span></span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _Profile.Start(<span style=\"color:rgb(163, 21, 21)\">&quot;Reading\r\n lines&quot;</span>);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">while</span> (_DataReaderList[TabNum].Read())</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">         \r\n<span style=\"color:rgb(43, 145, 175)\">StringBuilder</span> sbLine =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">StringBuilder</span>();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">         \r\n<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; _DataReaderList[TabNum].FieldCount - 1; i++)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">            sbLine.Append(_DataReaderList[TabNum][i].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">            sbLine.Append(_Delimiter);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          sbLine.Append(_DataReaderList[TabNum][_DataReaderList[TabNum].FieldCount - 1].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">         \r\n<span style=\"color:blue\">yield</span> \r\n<span style=\"color:blue\">return</span> (sbLine.ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        _Profile.Stop();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">override</span> <span style=\"color:blue\">string</span> ReadLine()</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:rgb(43, 145, 175)\">StringBuilder</span> sbLine =\r\n<span style=\"color:blue\">new</span> \r\n<span style=\"color:rgb(43, 145, 175)\">StringBuilder</span>();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">var</span> x = _DataReaderList[TabNum].Read();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">try</span></span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; _DataReaderList[TabNum].FieldCount - 1; i++)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          sbLine.Append(_DataReaderList[TabNum][i].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">          sbLine.Append(_Delimiter);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">        sbLine.Append(_DataReaderList[TabNum][_DataReaderList[TabNum].FieldCount - 1].ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">catch</span> (<span style=\"color:rgb(43, 145, 175)\">Exception</span> ex)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:blue\">return</span> (<span style=\"color:blue\">null</span>);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">return</span> (sbLine.ToString());</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">void</span> DisplayProfile()</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">foreach</span> (<span style=\"color:blue\">string</span> line\r\n<span style=\"color:blue\">in</span> _Profile.GetProfileEnumerator)</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">       \r\n<span style=\"color:rgb(43, 145, 175)\">Console</span>.WriteLine(line);</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">   \r\n<span style=\"color:blue\">public</span> \r\n<span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> Close()</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    {</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">      _conn.Close();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">     \r\n<span style=\"color:blue\">base</span>.Close();</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">    }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\"> </span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New';color:blue\">    #endregion</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">  }</span></p>\r\n<p style=\"\"><span style=\"font-size:10pt;font-family:'Courier New'\">}</span></p>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\"> </span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\"> </span><br>\r\n<div>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\">Steve Holle</span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\">Data Services Programmer</span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\"> </span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\">Tel: (406)255-9500</span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\">Fax: (406)255-9595</span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\"><a href=\"mailto:steveh@cu.net\">mailto:steveh@cu.net</a></span><span style=\"color:navy\"></span><br>\r\n<span style=\"font-size:10pt;font-family:Arial;color:navy\">SDG</span><span style=\"font-size:10pt;font-family:Arial\"></span><br>\r\n</div>\r\n<div>\r\n<div style=\"text-align:center\" align=center><span style=\"font-size:12pt\">\r\n<hr size=2 width=\"100%\" align=center>\r\n</span></div>\r\n<b><span style=\"font-size:10pt;font-family:Tahoma;font-weight:bold\">From:</span></b><span style=\"font-size:10pt;font-family:Tahoma\"> fennychai [mailto:notifications@codeplex.com]\r\n<br>\r\n<b><span style=\"font-weight:bold\">Sent:</span></b> Tuesday, June 30, 2009 5:30 PM<br>\r\n<b><span style=\"font-weight:bold\">To:</span></b> Steve Holle<br>\r\n<b><span style=\"font-weight:bold\">Subject:</span></b> Re: Read Excel Work Sheets [ExcelDataReader:59975]</span><br>\r\n</div>\r\n<span style=\"font-size:12pt\"> </span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana\">From: fennychai</span><br>\r\n<div style=\"margin-bottom:24pt\" id=\"EC_ThreadNotificationPostBody\">\r\n<span style=\"font-size:9pt;font-family:Verdana\">Hi Jay,</span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana\">I falied to read values from my Excel file, could you share with me, how did you manage to read values from your Excel file?</span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana\">Here is my code:</span><br>\r\n<div>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:blue\">string</span><span style=\"color:black\"> content = </span><span style=\"color:green\">// value returned from File Attachment control</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">bytes[] contentBytes = Convert.FromBase64String(content);</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:green\">// This contentBytes not only contains the data in Excel file,</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:green\">// also the file name, file size, etc.</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">bytes[] dataBytes = </span><span style=\"color:green\">// get the bytes[] of only the data in Excel file</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">MemoryStream stream = </span><span style=\"color:blue\">new</span><span style=\"color:black\"> MemoryStream(dataBytes);</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\"> </span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:green\">// The attached Excel is .xls file</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">IExcelDataReader reader = Factory.CreateReader(stream, ExcelFileType.Binary);</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">DataSet ds = reader.AsDataSet();</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\"> </span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:blue\">while</span><span style=\"color:black\">(reader.Read())</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">{</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">    </span><span style=\"color:green\">// </span><span style=\"color:red\">**</span><span style=\"color:green\"> reader.GetString(index) returns empty value;</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">}</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\"> </span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">DataTable dt = ds.Tables[0];</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">DataRowCollection rows = dt.Rows;</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:blue\">for</span><span style=\"color:black\">(</span><span style=\"color:blue\">int</span><span style=\"color:black\"> i = 0; i &lt; rows.Count; i++)</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">{</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">    </span><span style=\"color:blue\">foreach</span><span style=\"color:black\">(DataColumn column </span><span style=\"color:blue\">in</span><span style=\"color:black\"> dt.Columns)</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">    {</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">        </span><span style=\"color:green\">// </span><span style=\"color:red\">**</span><span style=\"color:green\"> rows[i][column.GetOrdinal()] returns empty value;</span><span style=\"color:black\"></span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">    }</span></pre>\r\n<pre style=\"background:white none repeat scroll 0% 0%\"><span style=\"font-size:10pt;color:black\">}</span></pre>\r\n</div>\r\n<span style=\"font-size:9pt;font-family:Verdana\">Thanks.</span><br>\r\n</div>\r\n<div style=\"border-style:solid none none;border-color:rgb(204, 204, 204) -moz-use-text-color -moz-use-text-color;border-width:1pt medium medium;padding:0in\" id=\"EC_ThreadNotificationFooter\">\r\n<span style=\"font-size:9pt;font-family:Verdana;color:gray\">Read the\r\n<a href=\"http://exceldatareader.codeplex.com/Thread/View.aspx?ThreadId=59975&ANCHOR#Post207308\">\r\nfull discussion online</a>.</span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana;color:gray\">To add a post to this discussion, reply to this email (<a href=\"mailto:ExcelDataReader@discussions.codeplex.com?subject=[ExcelDataReader:59975]\">ExcelDataReader@discussions.codeplex.com</a>)</span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana;color:gray\">To start a new discussion for this project, email\r\n<a href=\"mailto:ExcelDataReader@discussions.codeplex.com\">ExcelDataReader@discussions.codeplex.com</a></span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana;color:gray\">You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"http://www.codeplex.com/site/discussions/project/unsubscribe/ExcelDataReader\">\r\nunsubscribe or change your settings</a> on codePlex.com.</span><br>\r\n<span style=\"font-size:9pt;font-family:Verdana;color:gray\">Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at codeplex.com</span><br>\r\n</div>\r\n</div>\r\n<br>\r\n<hr>\r\nDISCLAIMER:<br>\r\nThis message is confidential, intended only for the named recipient(s) and may contain information that is privileged or exempt from disclosure under applicable law. If you are not the intended recipient(s), you are notified that the dissemination, distribution\r\n or copying of this message is strictly prohibited. If you receive this message in error, or are not the named recipient(s), please notify the sender at either the e-mail address or by calling the telephone number associated with this transmission. Please delete\r\n this e-mail from your computer (or discard this fax). Thank You.<br>\r\n\r\n</div> <br><hr>Hotmail® has ever-growing storage! Don’t worry about storage limits. <a href=\"http://windowslive.com/Tutorial/Hotmail/Storage?ocid=TXT_TAGLM_WL_HM_Tutorial_Storage_062009\">Check it out.</a>",
    "PostedDate": "2009-07-01T07:43:38.46-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207843",
    "ThreadId": "59975",
    "Html": "<p>Thanks Jay :-)</p>\r\n<p>Basically, there's nothing wrong in both of our code, just I have chinese&nbsp;font-family in my cell's value. I have chanage all values to Arial and now it's working fine. But I have a column contains date value, and seems this excel reader doesn't understand date format data.</p>\r\n<p>Any idea? :-)</p>",
    "PostedDate": "2009-07-02T00:48:40.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207982",
    "ThreadId": "59975",
    "Html": "\r\n By the way, here's how to read multiple spreadsheets:<br><br>IExcelDataReader reader = Factory.CreateReader(fs, ExcelFileType.Binary);<br>                DataSet ds = reader.AsDataSet();<br>                <br>                foreach (DataTable dt in ds.Tables)<br>                {<br>                    for (int i = 0; i &lt; dt.Rows.Count; i++)<br>                    {<br>                        // do something<br>                    }<br>                }<br><br>\r\n<br><br>Jay<br><br><br><hr>Insert movie times and more without leaving Hotmail®.  <a href=\"http://windowslive.com/Tutorial/Hotmail/QuickAdd?ocid=TXT_TAGLM_WL_HM_Tutorial_QuickAdd_062009\">See how.</a>",
    "PostedDate": "2009-07-02T07:45:48.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "207993",
    "ThreadId": "59975",
    "Html": "\r\nFenny,<br>What is the error that you're getting when it's attempting to return the column with the date? do you need to cast it?<br><br>Jay<br><br>\r\n<br><br><br><hr>Windows Live™ SkyDrive™: Get 25 GB of free online storage.   <a href=\"http://windowslive.com/online/skydrive?ocid=TXT_TAGLM_WL_SD_25GB_062009\">Get it on your BlackBerry or iPhone.</a>",
    "PostedDate": "2009-07-02T08:24:16.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "208162",
    "ThreadId": "59975",
    "Html": "<p>Jay,</p>\r\n<p>There's no any error return. My date value&nbsp;is &quot;11-10-2008&quot;, and the value&nbsp;returned from&nbsp;the&nbsp;excel reader&nbsp;is &quot;39732&quot;. <br>I have checked the date column in excel file (select the cell, then right-clcik -&gt; Format cells -&gt; Number tab), the selected category is Date, if I select General or Text&nbsp;category, the sample value displayed at the right is &quot;39732&quot;.</p>\r\n<p>Thanks. :-)</p>",
    "PostedDate": "2009-07-02T17:39:50.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "208165",
    "ThreadId": "59975",
    "Html": "\r\nHmm, I'm not sure Fenny. Can you try the code that I posted against your spreadsheet? I was able to pickup dates with my version.<br><br>\r\n<br><br><br><br><hr id=stopSpelling>From: [email removed]<br>To: [email removed]<br>Date: Thu, 2 Jul 2009 17:39:57 -0700<br>Subject: Re: Read Excel Work Sheets [ExcelDataReader:59975]<br><br>\r\n\r\n From: fennychai<br> <div id=\"EC_ThreadNotificationPostBody\">Jay,<br>\r\nThere's no any error return. My date value is &quot;11-10-2008&quot;, and the value returned from the excel reader is &quot;39732&quot;. <br>I have checked the date column in excel file (select the cell, then right-clcik -&gt; Format cells -&gt; Number tab), the selected category is Date, if I select General or Text category, the sample value displayed at the right is &quot;39732&quot;.<br>\r\nThanks. :-)<br></div> <br><hr>Windows Live™ SkyDrive™: Get 25 GB of free online storage.   <a href=\"http://windowslive.com/online/skydrive?ocid=TXT_TAGLM_WL_SD_25GB_062009\">Get it on your BlackBerry or iPhone.</a>",
    "PostedDate": "2009-07-02T18:11:27.35-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "208789",
    "ThreadId": "59975",
    "Html": "<p>Basically, I read the data from DataTable, which populated by reader.AsDataSet(). The DataTable always return me a string of the date.</p>\r\n<p>In order to get the date, I have to read it from reader.GetDatTime(i).</p>\r\n<p>By the way, we can read multiple spreadsheet from reader object as well:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>IExcelDataReader reader = <span style=\"color:Green\">// create reader based on the excel version</span>\r\n\r\n<span style=\"color:Blue\">while</span>(reader.NextResult()) <span style=\"color:Green\">// loop through the spreadsheet</span>\r\n{\r\n    <span style=\"color:Blue\">while</span>(reader.Read()) <span style=\"color:Green\">// loop through the row of current sheet</span>\r\n    {\r\n        DateTime date = reader.GetDateTime(i)\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p>Again, thanks Jay, you lead me out of the problems :)</p>",
    "PostedDate": "2009-07-05T20:54:11.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258860",
    "ThreadId": "59975",
    "Html": "<p>I do have one Excel file that gives error &quot;<span style=\"font-family:Consolas;font-size:xx-small\"><span style=\"font-family:Consolas;font-size:xx-small\">Error: Invalid file signature.</span></span>&quot; while reading it.</p>\r\n<p>I can open it with Excel okay and properties say that it's type of 97-2003 worksheet. But if I save it again as same type file then it can be read by most of the libraries, like this one. My problem here is that I should be able to read it as it's created from another application on pc that has no Excel installed.</p>\r\n<p>I can send sample file if anyone interested of studying it. I got hint that it's older variable format Excel file type.. but haven't found any library capable of reading it, outside MS Excel that is..</p>",
    "PostedDate": "2009-11-19T14:41:45.61-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258891",
    "ThreadId": "59975",
    "Html": "<p>Dilbertti,</p>\r\n<p>Checkout this post to see if it addresses your issue.</p>\r\n<p>&nbsp;</p>\r\n<div>\r\n<p>This is something I've been playing with recently.</p>\r\n<p>Check this post: <a href=\"http://stackoverflow.com/questions/156500/write-an-excel-workbook-to-a-memory-stream-net\">Write an excel workbook to a memory stream .NET</a></p>\r\n<p>It points to a great library by Carlos Aguilar Mares, which lets you work with Excel workbooks as XML.</p>\r\n<p><a rel=nofollow href=\"http://www.carlosag.net/Tools/ExcelXmlWriter/\">ExcelXMLWriter</a></p>\r\n<p>You dont need Excel installed on the server (which is kinda breaking the MS licensing anyway as you are accessing this over the web).</p>\r\n<p>You can load the Excel workbook as <span style=\"color:#008000\">a stream using <code>Workbook.Load(stream)</code></span></p>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<p>This is something I've been playing with recently.</p>\r\n<p>Check this post: <a href=\"http://stackoverflow.com/questions/156500/write-an-excel-workbook-to-a-memory-stream-net\">Write an excel workbook to a memory stream .NET</a></p>\r\n<p>It points to a great library by Carlos Aguilar Mares, which lets you work with Excel workbooks as XML.</p>\r\n<p><a rel=nofollow href=\"http://www.carlosag.net/Tools/ExcelXmlWriter/\">ExcelXMLWriter</a></p>\r\n<p>You dont need Excel installed on the server (which is kinda breaking the MS licensing anyway as you are accessing this over the web).</p>\r\n<p>You can load the Excel workbook as a stream using <code>Workbook.Load(stream)</code></p>\r\n</div>\r\n</div>",
    "PostedDate": "2009-11-19T16:36:14.703-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "259204",
    "ThreadId": "59975",
    "Html": "<p>Heretix,</p>\r\n<p>Nope, no such luck. Writing would be easy as XML or even HTLM table but writing is not something that I can control.</p>\r\n<p>I should be able to read the file as it is. I have tested numerous commercial libraries also but all failed. Only Excel itself seem to be able to read the file.</p>\r\n<p>Next I&nbsp;will test OpenOffice if functionlity from it could be used..</p>",
    "PostedDate": "2009-11-20T12:38:27.03-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]